#!/usr/bin/env bash

set -e

# source the common build functions
SCRIPT_DIR=$(cd "$(dirname "$0")" && pwd)
source "$SCRIPT_DIR/ios_build_functions.sh"

function setup_libssh2()
{
    LIBRARY_NAME="libssh2"
    BUILD_DIR="$INSTALL_PATH/$LIBRARY_NAME"
}

function build_libssh2()
{
    INSTALL_PREFIX="$ARCH_INSTALL_PATH/build/$LIBRARY_NAME/$ARCH"
    
    rm -rf "$INSTALL_PREFIX"
    mkdir -p "$INSTALL_PREFIX"

    # We only want to discover our static library
    export PKG_CONFIG="$SCRIPT_DIR/pkg-config-static"

    pushd "$INSTALL_PREFIX" > /dev/null

    cmake \
        -DCMAKE_C_COMPILER_WORKS:BOOL=ON \
        -DBUILD_SHARED_LIBS:BOOL=OFF \
        -DCMAKE_PREFIX_PATH:PATH="$ARCH_INSTALL_PATH" \
        -DPKG_CONFIG_USE_CMAKE_PREFIX_PATH:BOOL=ON \
        -DCMAKE_INSTALL_PREFIX:PATH="$INSTALL_PREFIX" \
        -DCMAKE_C_FLAGS:STRING="-fembed-bitcode" \
        -DCMAKE_OSX_SYSROOT="$SDKROOT" \
        -DCMAKE_OSX_ARCHITECTURES:STRING="$ARCH" \
        -DCMAKE_OSX_DEPLOYMENT_TARGET="$IPHONEOS_DEPLOYMENT_TARGET" \
        "$ROOT_PATH/External/libssh2" >> "$LOG" 2>&1
    cmake --build . -j$NUMBER_OF_CORES --target install >> "$LOG" 2>&1

    popd > /dev/null
}

build_all_archs setup_libssh2 build_libssh2
